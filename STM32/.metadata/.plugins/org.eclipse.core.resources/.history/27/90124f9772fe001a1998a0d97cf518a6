
#include "stm32f4xx.h"

int main()
{
	
		//led gpio configuration
		GPIO_Handle_t led;
		led.pGPIOx = GPIOD ;
		led.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12 ;
		led.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT  ;
		led.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD ;
		led.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD ;
		//GPIO_PeriClockControl ( GPIOD, ENABLE );    this is not required as it is already done in GPIO_init
		GPIO_Init ( &led );


		//button gpio configuration
		GPIO_Handle_t button;
		button.pGPIOx = GPIOA ;
		button.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0 ;
		button.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_INP ;
		button.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST ;
		button.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD ;					//because by default on board button has pull up or pull down resistor
		//GPIO_PeriClockControl ( GPIOA, ENABLE ) ; this is not required as it is already done in GPIO_init
		GPIO_Init( &button );
	
	
		while( 1 )
		{
			if ( GPIO_ReadFromInputPin ( button.pGPIOx, button.GPIO_PinConfig.GPIO_PinNumber ) == SET )
			{
				GPIO_WriteToOutputPin ( button.pGPIOx, button.GPIO_PinConfig.GPIO_PinNumber, SET);
			}
			else if ( button.pGPIOx, button.GPIO_PinConfig.GPIO_PinNumber == RESET )
			{
				GPIO_WriteToOutputPin ( button.pGPIOx, button.GPIO_PinConfig.GPIO_PinNumber, RESET );
			}
		}
	
		return 0;
}
